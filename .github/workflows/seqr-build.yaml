name: Build SEQR docker image
on: workflow_dispatch

jobs:
  deploy_server:
    runs-on: ubuntu-latest

    steps:
    - name: "checkout seqr repo"
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        recursive: 'true'

    - name: 'Set up deployment variables'
      run: |
        # Read in deployment information.
        pushd terraform && source read_deployment_vars.sh && popd
        echo "STORAGE_ACCOUNT=${STORAGE_ACCOUNT}" >> $GITHUB_ENV
        echo "STATE_CONTAINER=${STATE_CONTAINER}" >> $GITHUB_ENV

        # Set up container registry authentication for image push.
        echo "CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
        echo "CLIENT_PWD=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV

        # Set up image name and tag.
        AZURE_CR=${DEPLOYMENT_NAME}acr
        BUILDTAG=$(TZ=America/Los_Angeles date +'%y%m%d-%H%M%S')
        echo "Build/push ${AZURE_CR}/seqr:${BUILDTAG}"
        echo "SEQR_IMAGE=${AZURE_CR}/seqr" >> $GITHUB_ENV
        echo "IMAGE_TAG=${BUILDTAG}" >> $GITHUB_ENV

    - name: 'Log in to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Upload version file to blob storage'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo ${IMAGE_TAG} | az storage blob upload --data @- \
            --account-name ${STORAGE_ACCOUNT} \
            --container-name ${STATE_CONTAINER} \
            --name seqr.version \
            --auth-mode login
    
    - name: 'Log in to ACR'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CR }}
        username: ${{ env.CLIENT_ID }}
        password: ${{ env.CLIENT_PWD }}

    - name: 'Build and push image'
      run: |
        docker build \
          --tag ${SEQR_IMAGE}:${IMAGE_TAG} \
          --tag ${SEQR_IMAGE}:latest \
          -f seqr/deploy/docker/seqr/Dockerfile seqr
        docker push ${SEQR_IMAGE}:${IMAGE_TAG}
        docker push ${SEQR_IMAGE}:latest
